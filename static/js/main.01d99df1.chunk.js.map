{"version":3,"sources":["components/TopBar.js","App.js","reportWebVitals.js","index.js"],"names":["TopBar","logo","heading","children","titleOnClick","className","href","map","child","index","toString","Button","props","type","onClick","icon","text","App","useState","bool","setBool","count","setCount","size","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAEe,SAASA,EAAT,GAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,aACrD,OACI,sBAAKC,UAAU,kFAAf,UACKJ,EACD,oBAAII,UAAU,iBAAd,SAAgCD,EAC5B,mBAAGE,KAAMF,EAAT,SAAwBF,IAAeA,IAC3C,qBAAKG,UAAU,+CAAf,SACKF,GAAYA,EAASI,KAAI,SAACC,EAAOC,GAAR,OACtB,8BACKD,GADKC,EAAMC,oB,WCJpC,SAASC,EAAOC,GACZ,OACI,yBACIP,UAAWO,EAAMC,MAAQD,EAAMP,UAAY,IAAMO,EAAMP,UAAY,IACnES,QAASF,EAAME,QAFnB,UAGKF,EAAMG,MAAQH,EAAMG,KACpBH,EAAMI,MAAQJ,EAAMI,QAyDlBC,MApDf,WACI,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEMnB,EAAW,CACb,mBAAGG,KAAK,IAAID,UAAU,YAAtB,mBACA,mBAAGC,KAAK,IAAID,UAAU,YAAtB,qBACA,mBAAGC,KAAK,IAAID,UAAU,YAAtB,uBAGJ,OACI,gCACI,cAACL,EAAD,CAAQC,KAAM,cAAC,IAAD,CAAQsB,KAAK,KAAKC,MAAM,UAC9BtB,QAAS,YAAaE,aAAc,IAAKD,SAAUA,IAC3D,sBAAKE,UAAU,kDAAf,UACI,qBAAKA,UAAU,wCAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,2BAAf,UACI,cAACM,EAAD,CAAQE,KAAK,0BACLR,UAAU,OACVU,KAAM,cAAC,IAAD,CAASQ,KAAK,KAAKC,MAAM,UAC/BV,QAAS,kBAAMM,GAAQ,MAE/B,cAACT,EAAD,CAAQE,KAAK,wBACLR,UAAU,OACVU,KAAM,cAAC,IAAD,CAASQ,KAAK,KAAKC,MAAM,UAC/BV,QAAS,kBAAMM,GAAQ,SAGnC,sBAAKf,UAAU,2BAAf,UACI,cAACM,EAAD,CAAQE,KAAK,uBACLR,UAAU,OACVW,KAAK,WACLF,QAAS,kBAAMQ,EAASD,EAAQ,MAExC,cAACV,EAAD,CAAQE,KAAK,uBACLR,UAAU,OACVW,KAAK,WACLF,QAAS,kBAAMQ,EAASD,EAAQ,cAKpD,qBAAKhB,UAAW,2FACTc,EAAO,sBAAwB,sBADtC,SAEI,sBAAMd,UAAU,oCAAhB,SAAqDgB,aClD1DI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.01d99df1.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function TopBar({logo, heading, children, titleOnClick}) {\n    return (\n        <nav className=\"sticky top-0 z-50 h-16 bg-gray-300 top-0 w-screen flex items-center shadow pl-4\">\n            {logo}\n            <h1 className=\"ml-5 heading-1\">{titleOnClick ?\n                <a href={titleOnClick}>{heading}</a> : heading }</h1>\n            <div className=\"px-10 flex justify-start w-full items-center\">\n                {children && children.map((child, index) =>\n                    <div key={index.toString()}>\n                        {child}\n                    </div>\n                )}\n            </div>\n        </nav>\n    );\n}\n","import React, {useState} from \"react\";\nimport './App.css';\nimport TopBar from './components/TopBar';\nimport {FaBeer} from 'react-icons/fa';\nimport {FaCheck, FaTimes} from 'react-icons/fa';\n\nfunction Button(props) {\n    return (\n        <button\n            className={props.type + (props.className ? ' ' + props.className : '')}\n            onClick={props.onClick}>\n            {props.icon && props.icon}\n            {props.text && props.text}\n        </button>\n    );\n}\n\nfunction App() {\n    const [bool, setBool] = useState(true);\n    const [count, setCount] = useState(0);\n\n    const children = [\n        <a href=\"#\" className=\"link-gray\">About</a>,\n        <a href=\"#\" className=\"link-gray\">Contact</a>,\n        <a href=\"#\" className=\"link-gray\">Projects</a>\n    ]\n\n    return (\n        <div>\n            <TopBar logo={<FaBeer size=\"28\" color=\"white\"/>}\n                    heading={'Ivar Lund'} titleOnClick={'#'} children={children}/>\n            <div className=\"w-100 h-screen p-2 mx-auto bg-gray-200 relative\">\n                <div className=\"flex justify-center items-center py-2\">\n                    <div className=\"flex flex-col\">\n                        <div className=\"flex justify-center py-2\">\n                            <Button type=\"icon-button-round-green\"\n                                    className=\"mx-1\"\n                                    icon={<FaCheck size=\"16\" color=\"white\"/>}\n                                    onClick={() => setBool(true)}\n                            />\n                            <Button type=\"icon-button-round-red\"\n                                    className=\"mx-1\"\n                                    icon={<FaTimes size=\"18\" color=\"white\"/>}\n                                    onClick={() => setBool(false)}\n                            />\n                        </div>\n                        <div className=\"flex justify-center py-2\">\n                            <Button type=\"button-gray-outlined\"\n                                    className=\"mx-1\"\n                                    text=\"Increase\"\n                                    onClick={() => setCount(count + 1)}\n                            />\n                            <Button type=\"button-gray-outlined\"\n                                    className=\"mx-1\"\n                                    text=\"Decrease\"\n                                    onClick={() => setCount(count - 1)}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className={\"bg-gray-500 rounded-xl flex justify-center items-center h-36 w-36 mx-auto duration-500 \"\n                    + (bool ? 'transform scale-100' : 'transform scale-50')}>\n                    <span className=\"font-extrabold text-5xl font-sans\">{count}</span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}